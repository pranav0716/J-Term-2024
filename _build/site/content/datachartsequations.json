{"kind":"Notebook","sha256":"f9eb6bc5b9d39935320c333533d20a3458fc98e17c70c4e22ba46fc80d881e2a","slug":"datachartsequations","location":"/DataChartsEquations.ipynb","dependencies":[],"frontmatter":{"github":"https://github.com/pranav0716/J-Term-2024","keywords":[],"exports":[{"format":"ipynb","filename":"DataChartsEquations.ipynb","url":"/DataChartsEquations-29863ea7d94e11a3e0b4d42d259c2268.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport scipy as sp\nimport numpy as np\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nimport ipywidgets as widgets\nfrom IPython.display import display","visibility":"show","key":"oKokGCpnnw"},{"type":"output","id":"t36cTzf9bSwpz3jihAFaa","data":[],"visibility":"show","key":"YGe2U3ZVcL"}],"data":{"type":"notebook-code","editable":true,"slideshow":{"slide_type":""},"tags":[]},"visibility":"show","key":"Mp3GfhUkc8"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Replace 'Nyc' with the path to your CSV file\ncsv_path = 'NycSliceRawData.csv'\n\n# Read data from CSV file using pandas\nnyp = pd.read_csv(csv_path)\n\n# Display the first few rows of the dataframe to ensure it was loaded correctly\nnyp.head()\n","identifier":"example_table-code","enumerator":"1","html_id":"example-table-code","key":"vqaCSlOMp7"},{"type":"output","id":"JKGUIi2Rxbro33NNWMScU","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Name</th>\n      <th>location_lat</th>\n      <th>location_lng</th>\n      <th>Date</th>\n      <th>Year</th>\n      <th>Price as number</th>\n      <th>Price</th>\n      <th>Style</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>NaN</td>\n      <td>Tommy's Pizzeria</td>\n      <td>40.819562</td>\n      <td>-73.817209</td>\n      <td>2023-1205</td>\n      <td>2023</td>\n      <td>3.00</td>\n      <td>$3.00</td>\n      <td>Plain</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>NaN</td>\n      <td>99¢ Pizza</td>\n      <td>40.751655</td>\n      <td>-73.990435</td>\n      <td>2023-1129</td>\n      <td>2023</td>\n      <td>1.00</td>\n      <td>$1.00</td>\n      <td>Plain</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>NaN</td>\n      <td>Family Pizza</td>\n      <td>40.655857</td>\n      <td>-73.960172</td>\n      <td>2023-1028</td>\n      <td>2023</td>\n      <td>3.00</td>\n      <td>$3.00</td>\n      <td>Plain</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>NaN</td>\n      <td>Elegante Pizzeria</td>\n      <td>40.777182</td>\n      <td>-73.963597</td>\n      <td>2023-1021</td>\n      <td>2023</td>\n      <td>3.25</td>\n      <td>$3.25</td>\n      <td>Plain</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>NaN</td>\n      <td>Joe's Pizza</td>\n      <td>40.716897</td>\n      <td>-73.958958</td>\n      <td>2023-1018</td>\n      <td>2023</td>\n      <td>4.00</td>\n      <td>$4.00</td>\n      <td>Plain</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"},"text/plain":{"content":"   Unnamed: 0               Name  location_lat  location_lng       Date  Year  \\\n0         NaN   Tommy's Pizzeria     40.819562    -73.817209  2023-1205  2023   \n1         NaN          99¢ Pizza     40.751655    -73.990435  2023-1129  2023   \n2         NaN       Family Pizza     40.655857    -73.960172  2023-1028  2023   \n3         NaN  Elegante Pizzeria     40.777182    -73.963597  2023-1021  2023   \n4         NaN        Joe's Pizza     40.716897    -73.958958  2023-1018  2023   \n\n   Price as number  Price  Style  \n0             3.00  $3.00  Plain  \n1             1.00  $1.00  Plain  \n2             3.00  $3.00  Plain  \n3             3.25  $3.25  Plain  \n4             4.00  $4.00  Plain  ","content_type":"text/plain"}}}],"identifier":"example_table-output","html_id":"example-table-output","key":"QuUp9kvnPj"}],"data":{"type":"notebook-code"},"identifier":"example_table","label":"example_table","html_id":"example-table","key":"LkdpKjM0R9"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Assuming you have a DataFrame named nyp\n# Replace 'nyp' with your actual DataFrame\n\n# Filter the DataFrame for 'Plain' style\nplain_pizza_nyp = nyp[nyp['Style'] == 'Plain']\n\n# Set the correct order of years\nyear_order = sorted(plain_pizza_nyp['Year'].unique())\n\n# Create a geospatial heatmap with slider for plain pizza prices using Plotly Express\nfig = px.scatter_mapbox(\n    plain_pizza_nyp,\n    lat='location_lat',\n    lon='location_lng',\n    size='Price as number',  # Use the 'Price' column for marker size\n    color='Price as number',  # Use the 'Price' column for color intensity\n    height=1000,\n    hover_name='Name',  # Display restaurant names on hover\n    animation_frame='Year',  # Use the 'Year' column for animation\n    range_color=(plain_pizza_nyp['Price as number'].min(), plain_pizza_nyp['Price as number'].max()),  # Set the color range\n    zoom=10,  # Adjust the initial zoom level\n    mapbox_style='carto-positron',  # Choose the map style (you can explore other styles)\n    title='Plain Pizza Slice Prices in NYC',\n    category_orders={'Year': year_order}  # Set the order of years in the slider\n)\n\n# Customize the appearance\nfig.update_layout(\n    mapbox=dict(\n        accesstoken='pk.eyJ1IjoicG1qdGVybSIsImEiOiJjbHJwNnE0YTAwMmw2MmptdGZodDU3cTJ2In0.g4wJH64HhHsTViH9hZlINA',  # Replace with your Mapbox access token\n        bearing=0,\n        pitch=0\n    )\n)\n\n# Show the map\nfig.show()\n","identifier":"heatmap_w_slider-code","enumerator":"2","html_id":"heatmap-w-slider-code","key":"y428WB75Im"},{"type":"output","id":"6iLaBEq0wJkJmecNCaZHX","data":[{"output_type":"display_data","metadata":{},"data":{"application/vnd.plotly.v1+json":{"content_type":"application/vnd.plotly.v1+json","hash":"2d13375edb0d2e3cee3992bf33f07ad1","path":"/2d13375edb0d2e3cee3992bf33f07ad1.json"},"image/png":{"content_type":"image/png","hash":"5e86bc0621aab1f8612469e6deee79da","path":"/5e86bc0621aab1f8612469e6deee79da.png"},"text/html":{"content_type":"text/html","hash":"f31dcb8a02ef92e177169024312dcab1","path":"/f31dcb8a02ef92e177169024312dcab1.html"}}}],"identifier":"heatmap_w_slider-output","html_id":"heatmap-w-slider-output","key":"Dj0NspoZG1"}],"data":{"type":"notebook-code"},"identifier":"heatmap_w_slider","label":"heatmap_w_slider","html_id":"heatmap-w-slider","key":"ze60JfdW58"},{"type":"block","children":[{"type":"code","lang":"python","executable":true,"value":"# Assuming you have a DataFrame named nyp\n# Replace 'nyp' with your actual DataFrame\n\n# Filter the DataFrame for 'Plain' style\nplain_pizza_nyp = nyp[nyp['Style'] == 'Plain']\n\n# Sample data for plain pizza (replace with your actual data)\ndata = {\n    'Latitude': plain_pizza_nyp['location_lat'],\n    'Longitude': plain_pizza_nyp['location_lng'],\n    'Price': plain_pizza_nyp['Price as number'],\n    'Restaurant': plain_pizza_nyp['Name']\n}\n\ndf = pd.DataFrame(data)\n\n# Create a geospatial heatmap for plain pizza using Plotly Express\nfig = px.scatter_mapbox(\n    df,\n    lat='Latitude',\n    lon='Longitude',\n    size='Price',  # Use the 'Price' column for marker size\n    color='Price',  # Use the 'Price' column for color intensity\n    height=1000,\n    hover_name='Restaurant',  # Display restaurant names on hover\n    zoom=10,  # Adjust the initial zoom level\n    mapbox_style='carto-positron',  # Choose the map style (you can explore other styles)\n    title='Plain Pizza Slice Prices in NYC'\n)\n\n# Customize the appearance\nfig.update_layout(\n    mapbox=dict(\n        accesstoken='pk.eyJ1IjoicG1qdGVybSIsImEiOiJjbHJwNnE0YTAwMmw2MmptdGZodDU3cTJ2In0.g4wJH64HhHsTViH9hZlINA',  # Replace with your Mapbox access token\n        bearing=0,\n        pitch=0\n    )\n)\n\n# Show the map\nfig.show()\n","identifier":"heatmap_total-code","enumerator":"3","html_id":"heatmap-total-code","key":"qJWvBfFPFc"},{"type":"output","id":"cZiUqwtxVSeObQzgrLKlD","data":[{"output_type":"display_data","metadata":{},"data":{"application/vnd.plotly.v1+json":{"content_type":"application/vnd.plotly.v1+json","hash":"bd63e0ca89da03d5242354ffaf218230","path":"/bd63e0ca89da03d5242354ffaf218230.json"},"image/png":{"content_type":"image/png","hash":"6f8cd38881fc841df52a04232a4fa287","path":"/6f8cd38881fc841df52a04232a4fa287.png"},"text/html":{"content_type":"text/html","hash":"7b4836c816c655d8e41603be6c80612d","path":"/7b4836c816c655d8e41603be6c80612d.html"}}}],"identifier":"heatmap_total-output","html_id":"heatmap-total-output","key":"CUNRRcot9P"}],"data":{"type":"notebook-code"},"identifier":"heatmap_total","label":"heatmap_total","html_id":"heatmap-total","key":"AbvQjbbu1N"}],"key":"An2vznJJJV"},"references":{"cite":{"order":[],"data":{}}}}